package projecteuler;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class N4 {
	private int getImmediateSmallestPallindrome(int num, int numDigits) {
		int adjustedNumber = 0, tmpNd = numDigits;
		int powTen = (int) Math.pow(10, numDigits);
		boolean hasEvenDigits = numDigits % 2 == 0 ? true : false;

		while (tmpNd < numDigits / 2) {
			int tmpNmbr = 
			
			tmpNd-=2;
		}

		return adjustedNumber;
	}

	// Works for numbers less than 100
	private static int getPreviousLargestPallindrome(int num) {

		if (num < 100) {
			int tens = num / 10;
			int ones = num % 10;
			if (tens > ones) {
				int tmp = tens - 1;
				return tmp * 10 + tmp;
			} else if (tens < ones) {
				return tens * 10 + tens;
			} else {
				return tens == 0 ? 9 : num;
			}
		}

		return -1;
	}

	// Works for numbers less than 100
	private static int getNextSmallestPallindrome(int num) {
		if (num < 100) {
			int tens = num / 10;
			int ones = num % 10;
			if (tens > ones) {
				return tens * 10 + tens;
			} else if (tens < ones) {
				int tmp = tens + 1;
				return tmp * 10 + tmp;
			} else {
				return tens == 9 ? 0 : num;
			}
		}

		return -1;
	}

	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		int numTestCases = Integer.parseInt(br.readLine());
		for (int i = 0; i < numTestCases; i++) {
			String inputNumber = br.readLine();
		}
	}
}
