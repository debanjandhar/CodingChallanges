import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Waiter {
	
    static int[] waiter(int[] number, int q) {
    	List<Integer> outputList = new ArrayList<Integer>();

    	
    	
    	return getIntArrayFromList(outputList);
    }
    
    private static int[] getIntArrayFromList(List<Integer> intputArr) {
    	int[] finalArr = new int[intputArr.size()];
    	
    	int index = 0;
    	for (int i : finalArr) {
			finalArr[index++] = i;
		}
    	
    	return finalArr;
	}
    
    private List<Integer> getNPrimeNumbers(int n) {
    	List<Integer> primeNos = new ArrayList<Integer>();

    	// Calculate nth prime in chunks of 10000
    	while (primeNos.size() < n) {
    		int CHUNK_SIZE = 100000;
    		int[] primes = 	new int[10000];
    		for(int i=2; i<) {
    			
    		}
		}
    	
    	
    	return primeNos;
	}

    
    
    public static void main(String[] args) throws IOException {
    	int[] stackA = new int[] {1,2};
    	int numQueries = 2;
    	
        System.out.println(Arrays.toString(waiter(stackA, numQueries)));
    }
}
